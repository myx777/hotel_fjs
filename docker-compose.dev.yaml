services:

  mongo:
    image: mongo:latest
    restart: always
    container_name: mongodb
    logging:
      options:
        max-size: 500mb
        max-file: 4
    volumes:
      - ./data-base-hotel:/data/db
      - ./hotel-logs/mongo-logs:/var/log/mongodb
    command: ["--auth"]

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: always
    ports:
      - ${MONGO_EXPRESS_PORT}:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_LOGIN}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongodb
    depends_on:
      - mongo

  server:
    container_name: server-hotel
    restart: always
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    env_file:
      - .env
    volumes:
      - ./backend:/backend #для разработки
    logging:
      options:
        max-size: 500mb
        max-file: 4
    depends_on:
      - mongo
    command: npm run start:dev

  client:
    container_name: client-hotel
    restart: always
    build: 
      context: ./frontend
      dockerfile:  Dockerfile.dev
    volumes: 
     - ./frontend:/frontend # для разработки
     - /frontend/node_modules # для разработки
    logging:
      options:
        max-size: 500mb
        max-file: 4
    depends_on:
      -  server
    command: npm run dev

  nginx:
    container_name: nginx-hotel
    depends_on:
      - client
      - server
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./nginx
    volumes:
      - ./hotel-logs/nginx-logs:/var/log/nginx
    ports:
      - ${NGINX_PORT}:80
volumes:
  data-base: {}